name: Bump Version on Merge
on:
  pull_request:
    branches:
      - main
    types:
      - closed
env: 
  versioned_file: composer.json
jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check if Feature Branch merged
        run: |
          if [[ "${{ github.event.pull_request.head.ref }}" == feature* ]]; then
            echo "feature_flag=1" >> $GITHUB_ENV
          else
            echo "feature_flag=0" >> $GITHUB_ENV
          fi
      - name: Get current version from composer.json
        run: |
          echo "current_version=$(grep -m1 version composer.json | awk -F: '{ print $2 }' | sed 's/[", ]//g')" >> $GITHUB_ENV
      - name: Bump Minor Version
        if: ${{ env.feature_flag == '1' }}
        run: |
          echo "new_version=$(echo ${{ env.current_version }} | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF)) {$NF=0; $(NF-1)++;} else {$NF++; } print}') >> $GITHUB_ENV"
      - name: Bump Bugfix version
        if: ${{ env.feature_flag == '0' }}
        run: |
          echo "new_version=$(echo ${{env.current_version}} | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')" >> $GITHUB_ENV
      - name: Show new Version
        run: |
          echo "Bumping version from ${{ env.current_version }} to ${{ env.new_version }}"
      - name: Update ${{ env.versioned_file }} with the new version
        run: |
          sed -i "s/${{ env.current_version }}/${{ env.new_version }}/g" ${{ env.versioned_file }}
      - name: Set Global git config
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "Github Actions"
      - name: Commit the changes
        run: |
          git add ${{ env.versioned_file }}
          git commit -m "Update ${{ env.versioned_file }} to version ${{ env.new_version }}"
          git push
      - name: Create the tag
        run: |
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}
